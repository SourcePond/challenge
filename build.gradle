/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

ext {
    commonsLangVersion = '3.9'
    commonsMathVersion = '3.6.1'
    mockitoVersion = '3.2.4'
    junitVersion = '5.5.2'
}

allprojects {
    apply plugin: 'java-library'

    repositories {
        // Use jcenter for resolving dependencies.
        // You can declare any Maven/Ivy/file repository here.
        mavenCentral()
    }

    dependencies {
        // Use JUnit Jupiter API for testing.
        testImplementation project(':challenge-test-utils')
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"

        // Use JUnit Jupiter Engine for testing.
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }
}


dependencies {
    // This dependency is used by the application.
    api project(':challenge-api')
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation "org.apache.commons:commons-math3:$commonsMathVersion"
    implementation project(':challenge-utils')
    runtimeOnly project(':challenge-bst-impl')
}

application {
    // Define the main class for the application.
    mainClassName = 'org.sourcepond.challenge.app.Application'
    applicationDefaultJvmArgs = ['-Xss10m']
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
